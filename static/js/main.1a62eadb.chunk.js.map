{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App.js","index.js","Components/contactForm/ContactForm.module.css"],"names":["module","exports","initialState","name","number","ContactForm","addContact","useState","form","setForm","onHandleChenge","e","target","value","prev","reset","className","s","namelist","onSubmit","preventDefault","axios","post","then","res","id","data","catch","err","console","log","finally","nameinput","type","pattern","title","required","onChange","btncon","ContactList","getOnHandleFilter","onDeleteContact","menu","map","contact","list","btn","onClick","Filter","filter","onHandleFilter","filterinput","App","JSON","parse","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","addNewContact","prevState","uuidv4","isContactExist","some","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a62eadb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3GVz-\",\"menu\":\"ContactList_menu__RnJe-\",\"list\":\"ContactList_list__SFwED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterinput\":\"Filter_filterinput__1Ko2E\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = { name: \"\", number: \"\" };\r\n\r\nexport default function ContactForm({ addContact }) {\r\n  const [form, setForm] = useState(initialState);\r\n\r\n  const onHandleChenge = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"https://reactdz3-default-rtdb.firebaseio.com/contacts.json\", form)\r\n      .then((res) => addContact({ ...form, id: res.data.name }))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        reset();\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setForm((prev) => ({ ...prev, name: \"\", number: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <form className={s.namelist} onSubmit={onHandleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input\r\n          className={s.nameinput}\r\n          value={form.name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onHandleChenge}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number:\r\n        <input\r\n          className={s.nameinput}\r\n          value={form.number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onHandleChenge}\r\n        />\r\n      </label>\r\n      <button className={s.btncon} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ getOnHandleFilter, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.menu}>\r\n      {getOnHandleFilter.map((contact) => (\r\n        <li className={s.list} key={contact.id}>\r\n          <span>{contact.name}: </span>\r\n          <span>{contact.number}</span>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            id={contact.id}\r\n            onClick={onDeleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  getOnHandleFilter: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onHandleFilter }) => {\r\n  return (\r\n    <label className={s.filterinput}>\r\n      Find contacs by name:\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandleFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem(\"contacts\")) || []\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (addNewContact) => {\r\n    setContacts((prevState) => [\r\n      ...prevState,\r\n      { id: uuidv4(), ...addNewContact },\r\n    ]);\r\n  };\r\n\r\n  const isContactExist = (name) =>\r\n    contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n  const onHandleFilter = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  const getOnHandleFilter = () =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  const onDeleteContact = (e) => {\r\n    setContacts((prev) => prev.filter((contact) => contact.id !== e.target.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm addContact={addContact} isContactExist={isContactExist} />\r\n\r\n      <h2>Contacts</h2>\r\n\r\n      <Filter onHandleFilter={onHandleFilter} filter={filter} />\r\n      <ContactList\r\n        getOnHandleFilter={getOnHandleFilter()}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"namelist\":\"ContactForm_namelist__3w4wT\",\"nameinput\":\"ContactForm_nameinput__JxiDn\",\"btncon\":\"ContactForm_btncon__2b2Wc\"};"],"sourceRoot":""}