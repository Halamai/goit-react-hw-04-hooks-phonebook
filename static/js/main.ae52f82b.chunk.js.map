{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","Components/contactForm/ContactForm.module.css","Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","onHandleChenge","e","target","value","setState","onHandleSubmit","preventDefault","axios","post","then","res","props","addContact","id","data","catch","err","console","log","finally","reset","className","s","namelist","onSubmit","this","nameinput","type","pattern","title","required","onChange","btncon","Component","ContactList","getOnHandleFilter","onDeleteContact","menu","map","contact","list","btn","onClick","Filter","filter","onHandleFilter","filterinput","App","contacts","addNewContact","isContactExist","alert","prev","uuidv4","some","toLowerCase","includes","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae52f82b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3GVz-\",\"menu\":\"ContactList_menu__RnJe-\",\"list\":\"ContactList_list__SFwED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterinput\":\"Filter_filterinput__1Ko2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"namelist\":\"ContactForm_namelist__3w4wT\",\"nameinput\":\"ContactForm_nameinput__JxiDn\",\"btncon\":\"ContactForm_btncon__2b2Wc\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport axios from \"axios\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onHandleChenge = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        \"https://reactdz3-default-rtdb.firebaseio.com/contacts.json\",\r\n        this.state\r\n      )\r\n      .then((res) =>\r\n        this.props.addContact({ ...this.state, id: res.data.name })\r\n      )\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        this.reset();\r\n      });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={s.namelist} onSubmit={this.onHandleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            className={s.nameinput}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChenge}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            className={s.nameinput}\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChenge}\r\n          />\r\n        </label>\r\n        <button className={s.btncon} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ getOnHandleFilter, onDeleteContact }) => {\r\n  // console.log(getOnHandleFilter);\r\n  return (\r\n    <ul className={s.menu}>\r\n      {getOnHandleFilter.map((contact) => (\r\n        <li className={s.list} key={contact.id}>\r\n          <span>{contact.name}: </span>\r\n          <span>{contact.number}</span>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            id={contact.id}\r\n            onClick={onDeleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  getOnHandleFilter: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onHandleFilter }) => {\r\n  return (\r\n    <label className={s.filterinput}>\r\n      Find contacs by name:\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandleFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    console.log(contacts);\r\n    if (contacts) {\r\n      this.setState({ contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  // componentDidMount = () => {\r\n  //   axios\r\n  //     .get(\"https://reactdz3-default-rtdb.firebaseio.com/contacts.json\")\r\n  //     .then((res) => {\r\n  //       if (res.data) {\r\n  //         const keys = Object.keys(res.data);\r\n  //         const contacts = keys.map((key) => ({ id: key, ...res.data[key] }));\r\n  //         this.setState({ contacts });\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  addContact = (addNewContact) => {\r\n    if (this.isContactExist(addNewContact.name))\r\n      return alert(`${addNewContact.name} is already in contacts`);\r\n\r\n    this.setState((prev) => {\r\n      return {\r\n        contacts: [...prev.contacts, { id: uuidv4(), ...addNewContact }],\r\n      };\r\n    });\r\n  };\r\n  onHandleFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  isContactExist = (name) =>\r\n    this.state.contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n  getOnHandleFilter = () =>\r\n    this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n\r\n  onDeleteContact = (e) => {\r\n    const id = e.target.id;\r\n    this.setState((prev) => ({\r\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n\r\n    // axios\r\n    //   .delete(\r\n    //     `https://reactdz3-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    //   )\r\n    //   .then(() => {\r\n    //     this.setState((prev) => ({\r\n    //       contacts: prev.contacts.filter((contact) => contact.id !== id),\r\n    //     }));\r\n    //   });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter\r\n          onHandleFilter={this.onHandleFilter}\r\n          filter={this.state.filter}\r\n        />\r\n        <ContactList\r\n          getOnHandleFilter={this.getOnHandleFilter()}\r\n          onDeleteContact={this.onDeleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}